const fontbitmap = [
    // Character: ' '                                   CHR$(32)
    [
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
    ],
    // Character: '!'                                   CHR$(33)
    [
        0b00000000,
        0b00010000,
        0b00010000,
        0b00010000,
        0b00010000,
        0b00000000,
        0b00010000,
        0b00000000,
    ],
    // Character: '"'                                   CHR$(34)
    [
        0b00000000,
        0b00100100,
        0b00100100,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
    ],
    // Character: '#'                                   CHR$(35)
    [
        0b00000000,
        0b00100100,
        0b01111110,
        0b00100100,
        0b00100100,
        0b01111110,
        0b00100100,
        0b00000000,
    ],
    // Character: '$'                                   CHR$(36)
    [
        0b00000000,
        0b00001000,
        0b00111110,
        0b00101000,
        0b00111110,
        0b00001010,
        0b00111110,
        0b00001000,
    ],
    // Character: '%'                                   CHR$(37)
    [
        0b00000000,
        0b01100010,
        0b01100100,
        0b00001000,
        0b00010000,
        0b00100110,
        0b01000110,
        0b00000000,
    ],
    // Character: '&'                                   CHR$(38)
    [
        0b00000000,
        0b00010000,
        0b00101000,
        0b00010000,
        0b00101010,
        0b01000100,
        0b00111010,
        0b00000000,
    ],
    // Character: '''                                   CHR$(39)
    [
        0b00000000,
        0b00001000,
        0b00010000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
    ],
    // Character: '('                                   CHR$(40)
    [
        0b00000000,
        0b00000100,
        0b00001000,
        0b00001000,
        0b00001000,
        0b00001000,
        0b00000100,
        0b00000000,
    ],
    // Character: ')'                                   CHR$(41)
    [
        0b00000000,
        0b00100000,
        0b00010000,
        0b00010000,
        0b00010000,
        0b00010000,
        0b00100000,
        0b00000000,
    ],
    // Character: '*'                                   CHR$(42)
    [
        0b00000000,
        0b00000000,
        0b00010100,
        0b00001000,
        0b00111110,
        0b00001000,
        0b00010100,
        0b00000000,
    ],
    // Character: '+'                                   CHR$(43)
    [
        0b00000000,
        0b00000000,
        0b00001000,
        0b00001000,
        0b00111110,
        0b00001000,
        0b00001000,
        0b00000000,
    ],
    // Character: ','                                   CHR$(44)
    [
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00001000,
        0b00001000,
        0b00010000,
    ],
    // Character: '-'                                   CHR$(45)
    [
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00111110,
        0b00000000,
        0b00000000,
        0b00000000,
    ],
    // Character: '.'                                   CHR$(46)
    [
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00011000,
        0b00011000,
        0b00000000,
    ],
    // Character: '/'                                   CHR$(47)
    [
        0b00000000,
        0b00000000,
        0b00000010,
        0b00000100,
        0b00001000,
        0b00010000,
        0b00100000,
        0b00000000,
    ],
    // Character: '0'                                   CHR$(48)
    [
        0b00000000,
        0b00111100,
        0b01000110,
        0b01001010,
        0b01010010,
        0b01100010,
        0b00111100,
        0b00000000,
    ],
    // Character: '1'                                   CHR$(49)
    [
        0b00000000,
        0b00011000,
        0b00101000,
        0b00001000,
        0b00001000,
        0b00001000,
        0b00111110,
        0b00000000,
    ],
    // Character: '2'                                   CHR$(50)
    [
        0b00000000,
        0b00111100,
        0b01000010,
        0b00000010,
        0b00111100,
        0b01000000,
        0b01111110,
        0b00000000,
    ],
    // Character: '3'                                   CHR$(51)
    [
        0b00000000,
        0b00111100,
        0b01000010,
        0b00001100,
        0b00000010,
        0b01000010,
        0b00111100,
        0b00000000,
    ],
    // Character: '4'                                   CHR$(52)
    [
        0b00000000,
        0b00001000,
        0b00011000,
        0b00101000,
        0b01001000,
        0b01111110,
        0b00001000,
        0b00000000,
    ],
    // Character: '5'                                   CHR$(53)
    [
        0b00000000,
        0b01111110,
        0b01000000,
        0b01111100,
        0b00000010,
        0b01000010,
        0b00111100,
        0b00000000,
    ],
    // Character: '6'                                   CHR$(54)
    [
        0b00000000,
        0b00111100,
        0b01000000,
        0b01111100,
        0b01000010,
        0b01000010,
        0b00111100,
        0b00000000,
    ],
    // Character: '7'                                   CHR$(55)
    [
        0b00000000,
        0b01111110,
        0b00000010,
        0b00000100,
        0b00001000,
        0b00010000,
        0b00010000,
        0b00000000,
    ],
    // Character: '8'                                   CHR$(56)
    [
        0b00000000,
        0b00111100,
        0b01000010,
        0b00111100,
        0b01000010,
        0b01000010,
        0b00111100,
        0b00000000,
    ],
    // Character: '9'                                   CHR$(57)
    [
        0b00000000,
        0b00111100,
        0b01000010,
        0b01000010,
        0b00111110,
        0b00000010,
        0b00111100,
        0b00000000,
    ],
    // Character: ':'                                   CHR$(58)
    [
        0b00000000,
        0b00000000,
        0b00000000,
        0b00010000,
        0b00000000,
        0b00000000,
        0b00010000,
        0b00000000,
    ],
    // Character: ';'                                   CHR$(59)
    [
        0b00000000,
        0b00000000,
        0b00010000,
        0b00000000,
        0b00000000,
        0b00010000,
        0b00010000,
        0b00100000,
    ],
    // Character: '<'                                   CHR$(60)
    [
        0b00000000,
        0b00000000,
        0b00000100,
        0b00001000,
        0b00010000,
        0b00001000,
        0b00000100,
        0b00000000,
    ],
    // Character: '='                                   CHR$(61)
    [
        0b00000000,
        0b00000000,
        0b00000000,
        0b00111110,
        0b00000000,
        0b00111110,
        0b00000000,
        0b00000000,
    ],
    // Character: '>'                                   CHR$(62)
    [
        0b00000000,
        0b00000000,
        0b00010000,
        0b00001000,
        0b00000100,
        0b00001000,
        0b00010000,
        0b00000000,
    ],
    // Character: '?'                                   CHR$(63)
    [
        0b00000000,
        0b00111100,
        0b01000010,
        0b00000100,
        0b00001000,
        0b00000000,
        0b00001000,
        0b00000000,
    ],
    // Character: '@'                                   CHR$(64)
    [
        0b00000000,
        0b00111100,
        0b01001010,
        0b01010110,
        0b01011110,
        0b01000000,
        0b00111100,
        0b00000000,
    ],
    // Character: 'A'                                   CHR$(65)
    [
        0b00000000,
        0b00111100,
        0b01000010,
        0b01000010,
        0b01111110,
        0b01000010,
        0b01000010,
        0b00000000,
    ],
    // Character: 'B'                                   CHR$(66)
    [
        0b00000000,
        0b01111100,
        0b01000010,
        0b01111100,
        0b01000010,
        0b01000010,
        0b01111100,
        0b00000000,
    ],
    // Character: 'C'                                   CHR$(67)
    [
        0b00000000,
        0b00111100,
        0b01000010,
        0b01000000,
        0b01000000,
        0b01000010,
        0b00111100,
        0b00000000,
    ],
    // Character: 'D'                                   CHR$(68)
    [
        0b00000000,
        0b01111000,
        0b01000100,
        0b01000010,
        0b01000010,
        0b01000100,
        0b01111000,
        0b00000000,
    ],
    // Character: 'E'                                   CHR$(69)
    [
        0b00000000,
        0b01111110,
        0b01000000,
        0b01111100,
        0b01000000,
        0b01000000,
        0b01111110,
        0b00000000,
    ],
    // Character: 'F'                                   CHR$(70)
    [
        0b00000000,
        0b01111110,
        0b01000000,
        0b01111100,
        0b01000000,
        0b01000000,
        0b01000000,
        0b00000000,
    ],
    // Character: 'G'                                   CHR$(71)
    [
        0b00000000,
        0b00111100,
        0b01000010,
        0b01000000,
        0b01001110,
        0b01000010,
        0b00111100,
        0b00000000,
    ],
    // Character: 'H'                                   CHR$(72)
    [
        0b00000000,
        0b01000010,
        0b01000010,
        0b01111110,
        0b01000010,
        0b01000010,
        0b01000010,
        0b00000000,
    ],
    // Character: 'I'                                   CHR$(73)
    [
        0b00000000,
        0b00111110,
        0b00001000,
        0b00001000,
        0b00001000,
        0b00001000,
        0b00111110,
        0b00000000,
    ],
    // Character: 'J'                                   CHR$(74)
    [
        0b00000000,
        0b00000010,
        0b00000010,
        0b00000010,
        0b01000010,
        0b01000010,
        0b00111100,
        0b00000000,
    ],
    // Character: 'K'                                   CHR$(75)
    [
        0b00000000,
        0b01000100,
        0b01001000,
        0b01110000,
        0b01001000,
        0b01000100,
        0b01000010,
        0b00000000,
    ],
    // Character: 'L'                                   CHR$(76)
    [
        0b00000000,
        0b01000000,
        0b01000000,
        0b01000000,
        0b01000000,
        0b01000000,
        0b01111110,
        0b00000000,
    ],
    // Character: 'M'                                   CHR$(77)
    [
        0b00000000,
        0b01000010,
        0b01100110,
        0b01011010,
        0b01000010,
        0b01000010,
        0b01000010,
        0b00000000,
    ],
    // Character: 'N'                                   CHR$(78)
    [
        0b00000000,
        0b01000010,
        0b01100010,
        0b01010010,
        0b01001010,
        0b01000110,
        0b01000010,
        0b00000000,
    ],
    // Character: 'O'                                   CHR$(79)
    [
        0b00000000,
        0b00111100,
        0b01000010,
        0b01000010,
        0b01000010,
        0b01000010,
        0b00111100,
        0b00000000,
    ],
    // Character: 'P'                                   CHR$(80)
    [
        0b00000000,
        0b01111100,
        0b01000010,
        0b01000010,
        0b01111100,
        0b01000000,
        0b01000000,
        0b00000000,
    ],
    // Character: 'Q'                                   CHR$(81)
    [
        0b00000000,
        0b00111100,
        0b01000010,
        0b01000010,
        0b01010010,
        0b01001010,
        0b00111100,
        0b00000000,
    ],
    // Character: 'R'                                   CHR$(82)
    [
        0b00000000,
        0b01111100,
        0b01000010,
        0b01000010,
        0b01111100,
        0b01000100,
        0b01000010,
        0b00000000,
    ],
    // Character: 'S'                                   CHR$(83)
    [
        0b00000000,
        0b00111100,
        0b01000000,
        0b00111100,
        0b00000010,
        0b01000010,
        0b00111100,
        0b00000000,
    ],
    // Character: 'T'                                   CHR$(84)
    [
        0b00000000,
        0b11111110,
        0b00010000,
        0b00010000,
        0b00010000,
        0b00010000,
        0b00010000,
        0b00000000,
    ],
    // Character: 'U'                                   CHR$(85)
    [
        0b00000000,
        0b01000010,
        0b01000010,
        0b01000010,
        0b01000010,
        0b01000010,
        0b00111100,
        0b00000000,
    ],
    // Character: 'V'                                   CHR$(86)
    [
        0b00000000,
        0b01000010,
        0b01000010,
        0b01000010,
        0b01000010,
        0b00100100,
        0b00011000,
        0b00000000,
    ],
    // Character: 'W'                                   CHR$(87)
    [
        0b00000000,
        0b01000010,
        0b01000010,
        0b01000010,
        0b01000010,
        0b01011010,
        0b00100100,
        0b00000000,
    ],
    // Character: 'X'                                   CHR$(88)
    [
        0b00000000,
        0b01000010,
        0b00100100,
        0b00011000,
        0b00011000,
        0b00100100,
        0b01000010,
        0b00000000,
    ],
    // Character: 'Y'                                   CHR$(89)
    [
        0b00000000,
        0b10000010,
        0b01000100,
        0b00101000,
        0b00010000,
        0b00010000,
        0b00010000,
        0b00000000,
    ],
    // Character: 'Z'                                   CHR$(90)
    [
        0b00000000,
        0b01111110,
        0b00000100,
        0b00001000,
        0b00010000,
        0b00100000,
        0b01111110,
        0b00000000,
    ],
    // Character: '['                                   CHR$(91)
    [
        0b00000000,
        0b00001110,
        0b00001000,
        0b00001000,
        0b00001000,
        0b00001000,
        0b00001110,
        0b00000000,
    ],
    // Character: '\'                                   CHR$(92)
    [
        0b00000000,
        0b00000000,
        0b01000000,
        0b00100000,
        0b00010000,
        0b00001000,
        0b00000100,
        0b00000000,
    ],
    // Character: ']'                                   CHR$(93)
    [
        0b00000000,
        0b01110000,
        0b00010000,
        0b00010000,
        0b00010000,
        0b00010000,
        0b01110000,
        0b00000000,
    ],
    // Character: '^'                                   CHR$(94)
    [
        0b00000000,
        0b00010000,
        0b00111000,
        0b01010100,
        0b00010000,
        0b00010000,
        0b00010000,
        0b00000000,
    ],
    // Character: '_'                                   CHR$(95)
    [
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b11111111,
    ],
    // Character: 'pound'                               CHR$(96)
    [
        0b00000000,
        0b00011100,
        0b00100010,
        0b01111000,
        0b00100000,
        0b00100000,
        0b01111110,
        0b00000000,
    ],
    // Character: 'a'                                   CHR$(97)
    [
        0b00000000,
        0b00000000,
        0b00111000,
        0b00000100,
        0b00111100,
        0b01000100,
        0b00111100,
        0b00000000,
    ],
    // Character: 'b'                                   CHR$(98)
    [
        0b00000000,
        0b00100000,
        0b00100000,
        0b00111100,
        0b00100010,
        0b00100010,
        0b00111100,
        0b00000000,
    ],
    // Character: 'c'                                   CHR$(99)
    [
        0b00000000,
        0b00000000,
        0b00011100,
        0b00100000,
        0b00100000,
        0b00100000,
        0b00011100,
        0b00000000,
    ],
    // Character: 'd'                                   CHR$(100)
    [
        0b00000000,
        0b00000100,
        0b00000100,
        0b00111100,
        0b01000100,
        0b01000100,
        0b00111100,
        0b00000000,
    ],
    // Character: 'e'                                   CHR$(101)
    [
        0b00000000,
        0b00000000,
        0b00111000,
        0b01000100,
        0b01111000,
        0b01000000,
        0b00111100,
        0b00000000,
    ],
    // Character: 'f'                                   CHR$(102)
    [
        0b00000000,
        0b00001100,
        0b00010000,
        0b00011000,
        0b00010000,
        0b00010000,
        0b00010000,
        0b00000000,
    ],
    // Character: 'g'                                   CHR$(103)
    [
        0b00000000,
        0b00000000,
        0b00111100,
        0b01000100,
        0b01000100,
        0b00111100,
        0b00000100,
        0b00111000,
    ],
    // Character: 'h'                                   CHR$(104)
    [
        0b00000000,
        0b01000000,
        0b01000000,
        0b01111000,
        0b01000100,
        0b01000100,
        0b01000100,
        0b00000000,
    ],
    // Character: 'i'                                   CHR$(105)
    [
        0b00000000,
        0b00010000,
        0b00000000,
        0b00110000,
        0b00010000,
        0b00010000,
        0b00111000,
        0b00000000,
    ],
    // Character: 'j'                                   CHR$(106)
    [
        0b00000000,
        0b00000100,
        0b00000000,
        0b00000100,
        0b00000100,
        0b00000100,
        0b00100100,
        0b00011000,
    ],
    // Character: 'k'                                   CHR$(107)
    [
        0b00000000,
        0b00100000,
        0b00101000,
        0b00110000,
        0b00110000,
        0b00101000,
        0b00100100,
        0b00000000,
    ],
    // Character: 'l'                                   CHR$(108)
    [
        0b00000000,
        0b00010000,
        0b00010000,
        0b00010000,
        0b00010000,
        0b00010000,
        0b00001100,
        0b00000000,
    ],
    // Character: 'm'                                   CHR$(109)
    [
        0b00000000,
        0b00000000,
        0b01101000,
        0b01010100,
        0b01010100,
        0b01010100,
        0b01010100,
        0b00000000,
    ],
    // Character: 'n'                                   CHR$(110)
    [
        0b00000000,
        0b00000000,
        0b01111000,
        0b01000100,
        0b01000100,
        0b01000100,
        0b01000100,
        0b00000000,
    ],
    // Character: 'o'                                   CHR$(111)
    [
        0b00000000,
        0b00000000,
        0b00111000,
        0b01000100,
        0b01000100,
        0b01000100,
        0b00111000,
        0b00000000,
    ],
    // Character: 'p'                                   CHR$(112)
    [
        0b00000000,
        0b00000000,
        0b01111000,
        0b01000100,
        0b01000100,
        0b01111000,
        0b01000000,
        0b01000000,
    ],
    // Character: 'q'                                   CHR$(113)
    [
        0b00000000,
        0b00000000,
        0b00111100,
        0b01000100,
        0b01000100,
        0b00111100,
        0b00000100,
        0b00000110,
    ],
    // Character: 'r'                                   CHR$(114)
    [
        0b00000000,
        0b00000000,
        0b00011100,
        0b00100000,
        0b00100000,
        0b00100000,
        0b00100000,
        0b00000000,
    ],
    // Character: 's'                                   CHR$(115)
    [
        0b00000000,
        0b00000000,
        0b00111000,
        0b01000000,
        0b00111000,
        0b00000100,
        0b01111000,
        0b00000000,
    ],
    // Character: 't'                                   CHR$(116)
    [
        0b00000000,
        0b00010000,
        0b00111000,
        0b00010000,
        0b00010000,
        0b00010000,
        0b00001100,
        0b00000000,
    ],
    // Character: 'u'                                   CHR$(117)
    [
        0b00000000,
        0b00000000,
        0b01000100,
        0b01000100,
        0b01000100,
        0b01000100,
        0b00111000,
        0b00000000,
    ],
    // Character: 'v'                                   CHR$(118)
    [
        0b00000000,
        0b00000000,
        0b01000100,
        0b01000100,
        0b00101000,
        0b00101000,
        0b00010000,
        0b00000000,
    ],
    // Character: 'w'                                   CHR$(119)
    [
        0b00000000,
        0b00000000,
        0b01000100,
        0b01010100,
        0b01010100,
        0b01010100,
        0b00101000,
        0b00000000,
    ],
    // Character: 'x'                                   CHR$(120)
    [
        0b00000000,
        0b00000000,
        0b01000100,
        0b00101000,
        0b00010000,
        0b00101000,
        0b01000100,
        0b00000000,
    ],
    // Character: 'y'                                   CHR$(121)
    [
        0b00000000,
        0b00000000,
        0b01000100,
        0b01000100,
        0b01000100,
        0b00111100,
        0b00000100,
        0b00111000,
    ],
    // Character: 'z'                                   CHR$(122)
    [
        0b00000000,
        0b00000000,
        0b01111100,
        0b00001000,
        0b00010000,
        0b00100000,
        0b01111100,
        0b00000000,
    ],
    // Character: '{'                                   CHR$(123)
    [
        0b00000000,
        0b00001110,
        0b00001000,
        0b00110000,
        0b00001000,
        0b00001000,
        0b00001110,
        0b00000000,
    ],
    // Character: '|'                                   CHR$(124)
    [
        0b00000000,
        0b00001000,
        0b00001000,
        0b00001000,
        0b00001000,
        0b00001000,
        0b00001000,
        0b00000000,
    ],
    // Character: '}'                                   CHR$(125)
    [
        0b00000000,
        0b01110000,
        0b00010000,
        0b00001100,
        0b00010000,
        0b00010000,
        0b01110000,
        0b00000000,
    ],
    // Character: '~'                                   CHR$(126)
    [
        0b00000000,
        0b00010100,
        0b00101000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
    ],
    // Character: '(c)' copyright                       CHR$(127)
    [
        0b00111100,
        0b01000010,
        0b10011001,
        0b10100001,
        0b10100001,
        0b10011001,
        0b01000010,
        0b00111100,
    ],
    // Block characters (not in ROM)
    // Character: blank                                 CHR$(128)
    [
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
    ],
    // Character: upper right                           CHR$(129)
    [
        0b00001111,
        0b00001111,
        0b00001111,
        0b00001111,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
    ],
    // Character: upper left                            CHR$(130)
    [
        0b11110000,
        0b11110000,
        0b11110000,
        0b11110000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
    ],
    // Character: upper half                            CHR$(131)
    [
        0b11111111,
        0b11111111,
        0b11111111,
        0b11111111,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
    ],
    // Character: lower right                           CHR$(132)
    [
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00001111,
        0b00001111,
        0b00001111,
        0b00001111,
    ],
    // Character: right half                            CHR$(133)
    [
        0b00001111,
        0b00001111,
        0b00001111,
        0b00001111,
        0b00001111,
        0b00001111,
        0b00001111,
        0b00001111,
    ],
    // Character: upper left, lower right               CHR$(134)
    [
        0b11110000,
        0b11110000,
        0b11110000,
        0b11110000,
        0b00001111,
        0b00001111,
        0b00001111,
        0b00001111,
    ],
    // Character: upper half, lower right               CHR$(135)
    [
        0b11111111,
        0b11111111,
        0b11111111,
        0b11111111,
        0b00001111,
        0b00001111,
        0b00001111,
        0b00001111,
    ],
    // Character: lower left                            CHR$(136)
    [
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b11110000,
        0b11110000,
        0b11110000,
        0b11110000,
    ],
    // Character: lower left, upper right               CHR$(137)
    [
        0b00001111,
        0b00001111,
        0b00001111,
        0b00001111,
        0b11110000,
        0b11110000,
        0b11110000,
        0b11110000,
    ],
    // Character: left half                             CHR$(138)
    [
        0b11110000,
        0b11110000,
        0b11110000,
        0b11110000,
        0b11110000,
        0b11110000,
        0b11110000,
        0b11110000,
    ],
    // Character: upper half, lower left                CHR$(139)
    [
        0b11111111,
        0b11111111,
        0b11111111,
        0b11111111,
        0b11110000,
        0b11110000,
        0b11110000,
        0b11110000,
    ],
    // Character: lower half                            CHR$(140)
    [
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b11111111,
        0b11111111,
        0b11111111,
        0b11111111,
    ],
    // Character: lower half, upper right               CHR$(141)
    [
        0b00001111,
        0b00001111,
        0b00001111,
        0b00001111,
        0b11111111,
        0b11111111,
        0b11111111,
        0b11111111,
    ],
    // Character: left half, lower right                CHR$(142)
    [
        0b11110000,
        0b11110000,
        0b11110000,
        0b11110000,
        0b11111111,
        0b11111111,
        0b11111111,
        0b11111111,
    ],
    // Character: whole block                           CHR$(143)
    [
        0b11111111,
        0b11111111,
        0b11111111,
        0b11111111,
        0b11111111,
        0b11111111,
        0b11111111,
        0b11111111,
    ],
    //
    // Timex TS2068 extensions
    //
    // Character: 'm'                                   CHR$(144)
    [
        0b00000000,
        0b00000000,
        0b01101100,
        0b10010010,
        0b10010010,
        0b10010010,
        0b10010010,
        0b00000000,
    ],
    // Character: 'w'                                   CHR$(145)
    [
        0b00000000,
        0b00000000,
        0b10010010,
        0b10010010,
        0b10010010,
        0b10010010,
        0b01101100,
        0b00000000,
    ],
    //
    // ZX81 extensions
    //
    // ZX81 block checkerboard characters (in zx81 ROM)
    // Character: whole checker                         CHR$(146)...CHR$(8) in zx81
    [
        0b10101010,
        0b01010101,
        0b10101010,
        0b01010101,
        0b10101010,
        0b01010101,
        0b10101010,
        0b01010101,
    ],
    // Character: lower checker                         CHR$(147)...CHR$(9) in zx81
    [
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b10101010,
        0b01010101,
        0b10101010,
        0b01010101,
    ],
    // Character: upper checker                         CHR$(148)...CHR$(10) in zx81
    [
        0b10101010,
        0b01010101,
        0b10101010,
        0b01010101,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
    ],
    // ZX81 inversed block checkerboard characters (in zx81 ROM but inversed)
    // Character: inverse whole checker                 CHR$(149)...CHR$(136) in zx81, inversed CHR$(8)
    [
        0b01010101,
        0b10101010,
        0b01010101,
        0b10101010,
        0b01010101,
        0b10101010,
        0b01010101,
        0b10101010,
    ],
    // Character: inverse lower checker                 CHR$(150)...CHR$(137) in zx81, inversed CHR$(9)
    [
        0b11111111,
        0b11111111,
        0b11111111,
        0b11111111,
        0b01010101,
        0b10101010,
        0b01010101,
        0b10101010,
    ],
    // Character: inverse upper checker                 CHR$(151)...CHR$(138) in zx81, inversed CHR$(10)
    [
        0b01010101,
        0b10101010,
        0b01010101,
        0b10101010,
        0b11111111,
        0b11111111,
        0b11111111,
        0b11111111,
    ],
    // zx81 inversed characters (in zx81 ROM but inversed)
    // Character: inverse '"'                           CHR$(152)...CHR$(139) in zx81, inversed CHR$(11)
    [
        0b11111111,
        0b11011011,
        0b11011011,
        0b11111111,
        0b11111111,
        0b11111111,
        0b11111111,
        0b11111111,
    ],
    // Character: inverse pound                         CHR$(153)...CHR$(140) in zx81, inversed CHR$(12)
    [
        0b11111111,
        0b11100011,
        0b11011101,
        0b10000111,
        0b11011111,
        0b11011111,
        0b10000001,
        0b11111111,
    ],
    // Character: inverse '$'                           CHR$(154)...CHR$(141) in zx81, inversed CHR$(13)
    [
        0b11111111,
        0b11110111,
        0b11000001,
        0b11010111,
        0b11000001,
        0b11110101,
        0b11000001,
        0b11110111,
    ],
    // Character: inverse ':'                           CHR$(155)...CHR$(142) in zx81, inversed CHR$(14)
    [
        0b11111111,
        0b11111111,
        0b11111111,
        0b11101111,
        0b11111111,
        0b11111111,
        0b11101111,
        0b11111111,
    ],
    // Character: inverse '?'                           CHR$(156)...CHR$(143) in zx81, inversed CHR$(15)
    [
        0b11111111,
        0b11000011,
        0b10111101,
        0b11111011,
        0b11110111,
        0b11111111,
        0b11110111,
        0b11111111,
    ],
    // Character: inverse '('                           CHR$(157)...CHR$(144) in zx81, inversed CHR$(16)
    [
        0b11111111,
        0b11111011,
        0b11110111,
        0b11110111,
        0b11110111,
        0b11110111,
        0b11111011,
        0b11111111,
    ],
    // Character: inverse ')'                           CHR$(158)...CHR$(145) in zx81, inversed CHR$(17)
    [
        0b11111111,
        0b11011111,
        0b11101111,
        0b11101111,
        0b11101111,
        0b11101111,
        0b11011111,
        0b11111111,
    ],
    // Character: inverse '>'                           CHR$(159)...CHR$(146) in zx81, inversed CHR$(18)
    [
        0b11111111,
        0b11111111,
        0b11101111,
        0b11110111,
        0b11111011,
        0b11110111,
        0b11101111,
        0b11111111,
    ],
    // Character: inverse '<'                           CHR$(160)...CHR$(147) in zx81, inversed CHR$(19)
    [
        0b11111111,
        0b11111111,
        0b11111011,
        0b11110111,
        0b11101111,
        0b11110111,
        0b11111011,
        0b11111111,
    ],
    // Character: inverse '='                           CHR$(161)...CHR$(148) in zx81, inversed CHR$(20)
    [
        0b11111111,
        0b11111111,
        0b11111111,
        0b11000001,
        0b11111111,
        0b11000001,
        0b11111111,
        0b11111111,
    ],
    // Character: inverse '+'                           CHR$(162)...CHR$(149) in zx81, inversed CHR$(21)
    [
        0b11111111,
        0b11111111,
        0b11110111,
        0b11110111,
        0b11000001,
        0b11110111,
        0b11110111,
        0b11111111,
    ],
    // Character: inverse '-'                           CHR$(163)...CHR$(150) in zx81, inversed CHR$(22)
    [
        0b11111111,
        0b11111111,
        0b11111111,
        0b11111111,
        0b11000001,
        0b11111111,
        0b11111111,
        0b11111111,
    ],
    // Character: inverse '*'                           CHR$(164)...CHR$(151) in zx81, inversed CHR$(23)
    [
        0b11111111,
        0b11111111,
        0b11101011,
        0b11110111,
        0b11000001,
        0b11110111,
        0b11101011,
        0b11111111,
    ],
    // Character: inverse '/'                           CHR$(165)...CHR$(152) in zx81, inversed CHR$(24)
    [
        0b11111111,
        0b11111111,
        0b11111101,
        0b11111011,
        0b11110111,
        0b11101111,
        0b11011111,
        0b11111111,
    ],
    // Character: inverse ';'                           CHR$(166)...CHR$(153) in zx81, inversed CHR$(25)
    [
        0b11111111,
        0b11111111,
        0b11101111,
        0b11111111,
        0b11111111,
        0b11101111,
        0b11101111,
        0b11011111,
    ],
    // Character: inverse ','                           CHR$(167)...CHR$(154) in zx81, inversed CHR$(26)
    [
        0b11111111,
        0b11111111,
        0b11111111,
        0b11111111,
        0b11111111,
        0b11110111,
        0b11110111,
        0b11101111,
    ],
    // Character: inverse '.'                           CHR$(168)...CHR$(155) in zx81, inversed CHR$(27)
    [
        0b11111111,
        0b11111111,
        0b11111111,
        0b11111111,
        0b11111111,
        0b11100111,
        0b11100111,
        0b11111111,
    ],
    // Character: inverse '0'                           CHR$(169)...CHR$(156) in zx81, inversed CHR$(28)
    [
        0b11111111,
        0b11000011,
        0b10111001,
        0b10110101,
        0b10101101,
        0b10011101,
        0b11000011,
        0b11111111,
    ],
    // Character: inverse '1'                           CHR$(170)...CHR$(157) in zx81, inversed CHR$(29)
    [
        0b11111111,
        0b11100111,
        0b11010111,
        0b11110111,
        0b11110111,
        0b11110111,
        0b11000001,
        0b11111111,
    ],
    // Character: inverse '2'                           CHR$(171)...CHR$(158) in zx81, inversed CHR$(30)
    [
        0b11111111,
        0b11000011,
        0b10111101,
        0b11111101,
        0b11000011,
        0b10111111,
        0b10000001,
        0b11111111,
    ],
    // Character: inverse '3'                           CHR$(172)...CHR$(159) in zx81, inversed CHR$(31)
    [
        0b11111111,
        0b11000011,
        0b10111101,
        0b11110011,
        0b11111101,
        0b10111101,
        0b11000011,
        0b11111111,
    ],
    // Character: inverse '4'                           CHR$(173)...CHR$(160) in zx81, inversed CHR$(32)
    [
        0b11111111,
        0b11110111,
        0b11100111,
        0b11010111,
        0b10110111,
        0b10000001,
        0b11110111,
        0b11111111,
    ],
    // Character: inverse '5'                           CHR$(174)...CHR$(161) in zx81, inversed CHR$(33)
    [
        0b11111111,
        0b10000001,
        0b10111111,
        0b10000011,
        0b11111101,
        0b10111101,
        0b11000011,
        0b11111111,
    ],
    // Character: inverse '6'                           CHR$(175)...CHR$(162) in zx81, inversed CHR$(34)
    [
        0b11111111,
        0b11000011,
        0b10111111,
        0b10000011,
        0b10111101,
        0b10111101,
        0b11000011,
        0b11111111,
    ],
    // Character: inverse '7'                           CHR$(176)...CHR$(163) in zx81, inversed CHR$(35)
    [
        0b11111111,
        0b10000001,
        0b11111101,
        0b11111011,
        0b11110111,
        0b11101111,
        0b11101111,
        0b11111111,
    ],
    // Character: inverse '8'                           CHR$(177)...CHR$(164) in zx81, inversed CHR$(36)
    [
        0b11111111,
        0b11000011,
        0b10111101,
        0b11000011,
        0b10111101,
        0b10111101,
        0b11000011,
        0b11111111,
    ],
    // Character: inverse '9'                           CHR$(178)...CHR$(165) in zx81, inversed CHR$(37)
    [
        0b11111111,
        0b11000011,
        0b10111101,
        0b10111101,
        0b11000001,
        0b11111101,
        0b11000011,
        0b11111111,
    ],
    // Character: inverse 'A'                           CHR$(179)...CHR$(166) in zx81, inversed CHR$(38)
    [
        0b11111111,
        0b11000011,
        0b10111101,
        0b10111101,
        0b10000001,
        0b10111101,
        0b10111101,
        0b11111111,
    ],
    // Character: inverse 'B'                           CHR$(180)...CHR$(167) in zx81, inversed CHR$(39)
    [
        0b11111111,
        0b10000011,
        0b10111101,
        0b10000011,
        0b10111101,
        0b10111101,
        0b10000011,
        0b11111111,
    ],
    // Character: inverse 'C'                           CHR$(181)...CHR$(168) in zx81, inversed CHR$(40)
    [
        0b11111111,
        0b11000011,
        0b10111101,
        0b10111111,
        0b10111111,
        0b10111101,
        0b11000011,
        0b11111111,
    ],
    // Character: inverse 'D'                           CHR$(182)...CHR$(169) in zx81, inversed CHR$(41)
    [
        0b11111111,
        0b10000111,
        0b10111011,
        0b10111101,
        0b10111101,
        0b10111011,
        0b10000111,
        0b11111111,
    ],
    // Character: inverse 'E'                           CHR$(183)...CHR$(170) in zx81, inversed CHR$(42)
    [
        0b11111111,
        0b10000001,
        0b10111111,
        0b10000011,
        0b10111111,
        0b10111111,
        0b10000001,
        0b11111111,
    ],
    // Character: inverse 'F'                           CHR$(184)...CHR$(171) in zx81, inversed CHR$(43)
    [
        0b11111111,
        0b10000001,
        0b10111111,
        0b10000011,
        0b10111111,
        0b10111111,
        0b10111111,
        0b11111111,
    ],
    // Character: inverse 'G'                           CHR$(185)...CHR$(172) in zx81, inversed CHR$(44)
    [
        0b11111111,
        0b11000011,
        0b10111101,
        0b10111111,
        0b10110001,
        0b10111101,
        0b11000011,
        0b11111111,
    ],
    // Character: inverse 'H'                           CHR$(186)...CHR$(173) in zx81, inversed CHR$(45)
    [
        0b11111111,
        0b10111101,
        0b10111101,
        0b10000001,
        0b10111101,
        0b10111101,
        0b10111101,
        0b11111111,
    ],
    // Character: inverse 'I'                           CHR$(187)...CHR$(174) in zx81, inversed CHR$(46)
    [
        0b11111111,
        0b11000001,
        0b11110111,
        0b11110111,
        0b11110111,
        0b11110111,
        0b11000001,
        0b11111111,
    ],
    // Character: inverse 'J'                           CHR$(188)...CHR$(175) in zx81, inversed CHR$(47)
    [
        0b11111111,
        0b11111101,
        0b11111101,
        0b11111101,
        0b10111101,
        0b10111101,
        0b11000011,
        0b11111111,
    ],
    // Character: inverse 'K'                           CHR$(189)...CHR$(176) in zx81, inversed CHR$(48)
    [
        0b11111111,
        0b10111011,
        0b10110111,
        0b10001111,
        0b10110111,
        0b10111011,
        0b10111101,
        0b11111111,
    ],
    // Character: inverse 'L'                           CHR$(190)...CHR$(177) in zx81, inversed CHR$(49)
    [
        0b11111111,
        0b10111111,
        0b10111111,
        0b10111111,
        0b10111111,
        0b10111111,
        0b10000001,
        0b11111111,
    ],
    // Character: inverse 'M'                           CHR$(191)...CHR$(178) in zx81, inversed CHR$(50)
    [
        0b11111111,
        0b10111101,
        0b10011001,
        0b10100101,
        0b10111101,
        0b10111101,
        0b10111101,
        0b11111111,
    ],
    // Character: inverse 'N'                           CHR$(192)...CHR$(179) in zx81, inversed CHR$(51)
    [
        0b11111111,
        0b10111101,
        0b10011101,
        0b10101101,
        0b10110101,
        0b10111001,
        0b10111101,
        0b11111111,
    ],
    // Character: inverse 'O'                           CHR$(193)...CHR$(180) in zx81, inversed CHR$(52)
    [
        0b11111111,
        0b11000011,
        0b10111101,
        0b10111101,
        0b10111101,
        0b10111101,
        0b11000011,
        0b11111111,
    ],
    // Character: inverse 'P'                           CHR$(194)...CHR$(181) in zx81, inversed CHR$(53)
    [
        0b11111111,
        0b10000011,
        0b10111101,
        0b10111101,
        0b10000011,
        0b10111111,
        0b10111111,
        0b11111111,
    ],
    // Character: inverse 'Q'                           CHR$(195)...CHR$(182) in zx81, inversed CHR$(54)
    [
        0b11111111,
        0b11000011,
        0b10111101,
        0b10111101,
        0b10101101,
        0b10110101,
        0b11000011,
        0b11111111,
    ],
    // Character: inverse 'R'                           CHR$(196)...CHR$(183) in zx81, inversed CHR$(55)
    [
        0b11111111,
        0b10000011,
        0b10111101,
        0b10111101,
        0b10000011,
        0b10111011,
        0b10111101,
        0b11111111,
    ],
    // Character: inverse 'S'                           CHR$(197)...CHR$(184) in zx81, inversed CHR$(56)
    [
        0b11111111,
        0b11000011,
        0b10111111,
        0b11000011,
        0b11111101,
        0b10111101,
        0b11000011,
        0b11111111,
    ],
    // Character: inverse 'T'                           CHR$(198)...CHR$(185) in zx81, inversed CHR$(57)
    [
        0b11111111,
        0b00000001,
        0b11101111,
        0b11101111,
        0b11101111,
        0b11101111,
        0b11101111,
        0b11111111,
    ],
    // Character: inverse 'U'                           CHR$(199)...CHR$(186) in zx81, inversed CHR$(58)
    [
        0b11111111,
        0b10111101,
        0b10111101,
        0b10111101,
        0b10111101,
        0b10111101,
        0b11000011,
        0b11111111,
    ],
    // Character: inverse 'V'                           CHR$(200)...CHR$(187) in zx81, inversed CHR$(59)
    [
        0b11111111,
        0b10111101,
        0b10111101,
        0b10111101,
        0b10111101,
        0b11011011,
        0b11100111,
        0b11111111,
    ],
    // Character: inverse 'W'                           CHR$(201)...CHR$(188) in zx81, inversed CHR$(60)
    [
        0b11111111,
        0b10111101,
        0b10111101,
        0b10111101,
        0b10111101,
        0b10100101,
        0b11011011,
        0b11111111,
    ],
    // Character: inverse 'X'                           CHR$(202)...CHR$(189) in zx81, inversed CHR$(61)
    [
        0b11111111,
        0b10111101,
        0b11011011,
        0b11100111,
        0b11100111,
        0b11011011,
        0b10111101,
        0b11111111,
    ],
    // Character: inverse 'Y'                           CHR$(203)...CHR$(190) in zx81, inversed CHR$(62)
    [
        0b11111111,
        0b01111101,
        0b10111011,
        0b11010111,
        0b11101111,
        0b11101111,
        0b11101111,
        0b11111111,
    ],
    // Character: inverse 'Z'                           CHR$(204)...CHR$(191) in zx81, inversed CHR$(63)
    [
        0b11111111,
        0b10000001,
        0b11111011,
        0b11110111,
        0b11101111,
        0b11011111,
        0b10000001,
        0b11111111,
    ],
]